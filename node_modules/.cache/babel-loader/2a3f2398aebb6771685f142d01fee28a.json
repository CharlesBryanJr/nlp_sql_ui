{"ast":null,"code":"import { START_LOADING, END_LOADING, FETCH_ALL_LOADS, FETCH_LOAD, FETCH_LOAD_BY_SEARCH, CREATE_LOAD, UPDATE_LOAD, DELETE_LOAD } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getLoad = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchLoad(id);\n    dispatch({\n      type: FETCH_LOAD,\n      payload: {\n        load: data\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getLoads = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    } = await api.fetchLoads(page);\n    dispatch({\n      type: FETCH_ALL_LOADS,\n      payload: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getLoadsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchLoadBySearch(searchQuery);\n    dispatch({\n      type: FETCH_LOAD_BY_SEARCH,\n      payload: {\n        data\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createLoad = (load, history) => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createLoad(load);\n    dispatch({\n      type: CREATE_LOAD,\n      payload: data\n    });\n    console.log('createLoad', data);\n\n    // history.push(`/carriers/${data._id}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateLoad = (id, load) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateLoad(id, load);\n    dispatch({\n      type: UPDATE_LOAD,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteLoad = id => async dispatch => {\n  try {\n    await api.deleteLoad(id);\n    dispatch({\n      type: DELETE_LOAD,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["START_LOADING","END_LOADING","FETCH_ALL_LOADS","FETCH_LOAD","FETCH_LOAD_BY_SEARCH","CREATE_LOAD","UPDATE_LOAD","DELETE_LOAD","api","getLoad","id","dispatch","type","data","fetchLoad","payload","load","error","console","log","getLoads","page","currentPage","numberOfPages","fetchLoads","getLoadsBySearch","searchQuery","fetchLoadBySearch","createLoad","history","updateLoad","deleteLoad"],"sources":["/Users/charlesbryan/Desktop/nlp_sql_query_ui/src/actions/Loads.js"],"sourcesContent":["import { START_LOADING, END_LOADING, FETCH_ALL_LOADS, FETCH_LOAD, FETCH_LOAD_BY_SEARCH, CREATE_LOAD, UPDATE_LOAD, DELETE_LOAD } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\nexport const getLoad = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.fetchLoad(id);\n    dispatch({ type: FETCH_LOAD, payload: { load: data } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getLoads = (page) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data, currentPage, numberOfPages } } = await api.fetchLoads(page);\n    dispatch({ type: FETCH_ALL_LOADS, payload: { data, currentPage, numberOfPages } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getLoadsBySearch = (searchQuery) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchLoadBySearch(searchQuery);\n    dispatch({ type: FETCH_LOAD_BY_SEARCH, payload: { data } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createLoad = (load, history) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.createLoad(load);\n    dispatch({ type: CREATE_LOAD, payload: data });\n    console.log('createLoad', data);\n\n    // history.push(`/carriers/${data._id}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateLoad = (id, load) => async (dispatch) => {\n  try {\n    const { data } = await api.updateLoad(id, load);\n    dispatch({ type: UPDATE_LOAD, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteLoad = (id) => async (dispatch) => {\n  try {\n    await api.deleteLoad(id);\n    dispatch({ type: DELETE_LOAD, payload: id });\n  } catch (error) {\n    console.log(error);\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
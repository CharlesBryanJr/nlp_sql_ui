{"ast":null,"code":"import { START_LOADING, END_LOADING, FETCH_ALL_CARRIERS, FETCH_CARRIER, FETCH_CARRIER_BY_SEARCH, CREATE_CARRIER, UPDATE_CARRIER, DELETE_CARRIER } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getCarrier = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchCarrier(id);\n    dispatch({\n      type: FETCH_CARRIER,\n      payload: {\n        carrier: data\n      }\n    });\n    console.log('getCarrier');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getCarriers = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    } = await api.fetchCarriers(page);\n    dispatch({\n      type: FETCH_ALL_CARRIERS,\n      payload: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n    console.log('getCarriers');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getCarrierBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchCarrierBySearch(searchQuery);\n    dispatch({\n      type: FETCH_CARRIER_BY_SEARCH,\n      payload: {\n        data\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n    console.log('getCarrierBySearch');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createCarrier = (carrier, history) => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createCarrier(carrier);\n    dispatch({\n      type: CREATE_CARRIER,\n      payload: carrier\n    });\n\n    // history.push(`/carriers/${data._id}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateCarrier = (id, carrier) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateCarrier(id, carrier);\n    dispatch({\n      type: UPDATE_CARRIER,\n      payload: data\n    });\n    console.log('updateCarrier');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteCarrier = id => async dispatch => {\n  try {\n    await await api.deleteCarrier(id);\n    dispatch({\n      type: DELETE_CARRIER,\n      payload: id\n    });\n    console.log('deleteCarrier');\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["START_LOADING","END_LOADING","FETCH_ALL_CARRIERS","FETCH_CARRIER","FETCH_CARRIER_BY_SEARCH","CREATE_CARRIER","UPDATE_CARRIER","DELETE_CARRIER","api","getCarrier","id","dispatch","type","data","fetchCarrier","payload","carrier","console","log","error","getCarriers","page","currentPage","numberOfPages","fetchCarriers","getCarrierBySearch","searchQuery","fetchCarrierBySearch","createCarrier","history","updateCarrier","deleteCarrier"],"sources":["/Users/charlesbryan/Desktop/nlp_sql_query_ui/src/actions/Carriers.js"],"sourcesContent":["import { START_LOADING, END_LOADING, FETCH_ALL_CARRIERS, FETCH_CARRIER, FETCH_CARRIER_BY_SEARCH, CREATE_CARRIER, UPDATE_CARRIER, DELETE_CARRIER } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\nexport const getCarrier = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.fetchCarrier(id);\n    dispatch({ type: FETCH_CARRIER, payload: { carrier: data } });\n    console.log('getCarrier');\n\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCarriers = (page) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data, currentPage, numberOfPages } } = await api.fetchCarriers(page);\n    dispatch({ type: FETCH_ALL_CARRIERS, payload: { data, currentPage, numberOfPages } });\n    dispatch({ type: END_LOADING });\n    console.log('getCarriers');\n\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCarrierBySearch = (searchQuery) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchCarrierBySearch(searchQuery);\n    dispatch({ type: FETCH_CARRIER_BY_SEARCH, payload: { data } });\n    dispatch({ type: END_LOADING });\n    console.log('getCarrierBySearch');\n\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createCarrier = (carrier, history) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.createCarrier(carrier);\n    dispatch({ type: CREATE_CARRIER, payload: carrier });\n\n    // history.push(`/carriers/${data._id}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateCarrier = (id, carrier) => async (dispatch) => {\n  try {\n    const { data } = await api.updateCarrier(id, carrier);\n    dispatch({ type: UPDATE_CARRIER, payload: data });\n    console.log('updateCarrier');\n\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteCarrier = (id) => async (dispatch) => {\n  try {\n    await await api.deleteCarrier(id);\n    dispatch({ type: DELETE_CARRIER, payload: id });\n    console.log('deleteCarrier');\n\n  } catch (error) {\n    console.log(error);\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"const {\n  START_LOADING,\n  END_LOADING,\n  FETCH_ALL_CARRIERS,\n  FETCH_CARRIER_BY_SEARCH,\n  FETCH_CARRIER,\n  CREATE_CARRIER,\n  UPDATE_CARRIER,\n  DELETE_CARRIER\n} = require('../constants/actionTypes');\nmodule.exports = (state = {\n  isLoading: true,\n  carriers: []\n}, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case END_LOADING:\n      return {\n        ...state,\n        isLoading: false\n      };\n    case FETCH_ALL_CARRIERS:\n      if (action.payload && action.payload.data) {\n        return {\n          ...state,\n          carriers: action.payload.data,\n          currentPage: action.payload.currentPage,\n          numberOfPages: action.payload.numberOfPages\n        };\n      }\n      break;\n    case FETCH_CARRIER_BY_SEARCH:\n      console.log('FETCH_CARRIER_BY_SEARCH');\n      break;\n    case FETCH_CARRIER:\n      if (action.payload && action.payload.carrier) {\n        return {\n          ...state,\n          carrier: action.payload.carrier\n        };\n      }\n      break;\n    case CREATE_CARRIER:\n      if (action.payload) {\n        return {\n          ...state,\n          carriers: [...state.carriers, action.payload]\n        };\n      }\n      break;\n    case UPDATE_CARRIER:\n      if (action.payload) {\n        console.log('UPDATE_CARRIER:', action.payload); // Log the updated carrier\n        return {\n          ...state,\n          carriers: state.carriers.map(carrier => carrier._id === action.payload._id ? action.payload : carrier)\n        };\n      }\n      break;\n    case DELETE_CARRIER:\n      if (action.payload) {\n        return {\n          ...state,\n          carriers: state.carriers.filter(carrier => carrier._id !== action.payload)\n        };\n      }\n      break;\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["START_LOADING","END_LOADING","FETCH_ALL_CARRIERS","FETCH_CARRIER_BY_SEARCH","FETCH_CARRIER","CREATE_CARRIER","UPDATE_CARRIER","DELETE_CARRIER","require","module","exports","state","isLoading","carriers","action","type","payload","data","currentPage","numberOfPages","console","log","carrier","map","_id","filter"],"sources":["/Users/charlesbryan/Desktop/nlp_sql_ui/src/reducers/Carriers.js"],"sourcesContent":["const { START_LOADING, END_LOADING, FETCH_ALL_CARRIERS, FETCH_CARRIER_BY_SEARCH, FETCH_CARRIER, CREATE_CARRIER, UPDATE_CARRIER, DELETE_CARRIER } = require('../constants/actionTypes');\n\nmodule.exports = (state = { isLoading: true, carriers: [] }, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state, isLoading: true };\n\n    case END_LOADING:\n      return { ...state, isLoading: false };\n\n    case FETCH_ALL_CARRIERS:\n      if (action.payload && action.payload.data) {\n        return {\n          ...state,\n          carriers: action.payload.data,\n          currentPage: action.payload.currentPage,\n          numberOfPages: action.payload.numberOfPages,\n        };\n      }\n      break;\n\n    case FETCH_CARRIER_BY_SEARCH:\n      console.log('FETCH_CARRIER_BY_SEARCH');\n      break;\n\n    case FETCH_CARRIER:\n      if (action.payload && action.payload.carrier) {\n        return { ...state, carrier: action.payload.carrier };\n      }\n      break;\n\n    case CREATE_CARRIER:\n      if (action.payload) {\n        return { ...state, carriers: [...state.carriers, action.payload] };\n      }\n      break;\n\n    case UPDATE_CARRIER:\n      if (action.payload) {\n        console.log('UPDATE_CARRIER:', action.payload); // Log the updated carrier\n        return { ...state, carriers: state.carriers.map((carrier) => (carrier._id === action.payload._id ? action.payload : carrier)) };\n      }\n      break;\n\n    case DELETE_CARRIER:\n      if (action.payload) {\n        return { ...state, carriers: state.carriers.filter((carrier) => carrier._id !== action.payload) };\n      }\n      break;\n\n    default:\n      return state;\n  }\n};"],"mappings":"AAAA,MAAM;EAAEA,aAAa;EAAEC,WAAW;EAAEC,kBAAkB;EAAEC,uBAAuB;EAAEC,aAAa;EAAEC,cAAc;EAAEC,cAAc;EAAEC;AAAe,CAAC,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAEtLC,MAAM,CAACC,OAAO,GAAG,CAACC,KAAK,GAAG;EAAEC,SAAS,EAAE,IAAI;EAAEC,QAAQ,EAAE;AAAG,CAAC,EAAEC,MAAM,KAAK;EACtE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKf,aAAa;MAChB,OAAO;QAAE,GAAGW,KAAK;QAAEC,SAAS,EAAE;MAAK,CAAC;IAEtC,KAAKX,WAAW;MACd,OAAO;QAAE,GAAGU,KAAK;QAAEC,SAAS,EAAE;MAAM,CAAC;IAEvC,KAAKV,kBAAkB;MACrB,IAAIY,MAAM,CAACE,OAAO,IAAIF,MAAM,CAACE,OAAO,CAACC,IAAI,EAAE;QACzC,OAAO;UACL,GAAGN,KAAK;UACRE,QAAQ,EAAEC,MAAM,CAACE,OAAO,CAACC,IAAI;UAC7BC,WAAW,EAAEJ,MAAM,CAACE,OAAO,CAACE,WAAW;UACvCC,aAAa,EAAEL,MAAM,CAACE,OAAO,CAACG;QAChC,CAAC;MACH;MACA;IAEF,KAAKhB,uBAAuB;MAC1BiB,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtC;IAEF,KAAKjB,aAAa;MAChB,IAAIU,MAAM,CAACE,OAAO,IAAIF,MAAM,CAACE,OAAO,CAACM,OAAO,EAAE;QAC5C,OAAO;UAAE,GAAGX,KAAK;UAAEW,OAAO,EAAER,MAAM,CAACE,OAAO,CAACM;QAAQ,CAAC;MACtD;MACA;IAEF,KAAKjB,cAAc;MACjB,IAAIS,MAAM,CAACE,OAAO,EAAE;QAClB,OAAO;UAAE,GAAGL,KAAK;UAAEE,QAAQ,EAAE,CAAC,GAAGF,KAAK,CAACE,QAAQ,EAAEC,MAAM,CAACE,OAAO;QAAE,CAAC;MACpE;MACA;IAEF,KAAKV,cAAc;MACjB,IAAIQ,MAAM,CAACE,OAAO,EAAE;QAClBI,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEP,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;QAChD,OAAO;UAAE,GAAGL,KAAK;UAAEE,QAAQ,EAAEF,KAAK,CAACE,QAAQ,CAACU,GAAG,CAAED,OAAO,IAAMA,OAAO,CAACE,GAAG,KAAKV,MAAM,CAACE,OAAO,CAACQ,GAAG,GAAGV,MAAM,CAACE,OAAO,GAAGM,OAAQ;QAAE,CAAC;MACjI;MACA;IAEF,KAAKf,cAAc;MACjB,IAAIO,MAAM,CAACE,OAAO,EAAE;QAClB,OAAO;UAAE,GAAGL,KAAK;UAAEE,QAAQ,EAAEF,KAAK,CAACE,QAAQ,CAACY,MAAM,CAAEH,OAAO,IAAKA,OAAO,CAACE,GAAG,KAAKV,MAAM,CAACE,OAAO;QAAE,CAAC;MACnG;MACA;IAEF;MACE,OAAOL,KAAK;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}